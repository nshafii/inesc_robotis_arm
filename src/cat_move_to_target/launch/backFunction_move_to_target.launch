<launch>

<!-- some parameters -->
 <!-- <param name="pi" type="double" value="3.141592654" />  -->

  <arg name="db" default="false" />
  <arg name="debug" default="false" />

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find robotis_manipulator_h_moveit)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find robotis_manipulator_h_moveit)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>  
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node 
  <include file="$(find robotis_manipulator_h_moveit)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include> -->

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find robotis_manipulator_h_moveit)/launch/default_warehouse_db.launch" if="$(arg db)"/>

	<!-- manipulator node controller LAUNCH -->
	<include file="$(find robotis_controller)/launch/robotis_another.launch">
	</include>

	<node pkg="cat_manipulator_control" type="my_init_robot" name="init_robot" output="screen"/> 

<!-- launch camera here -->

	<include file="$(find cat_move_to_target)/launch/apriltags_launch.launch">
	</include>

<!--	<node pkg="cat_move_to_target" type="gettagpose_service" name="gettagpose_service" output="screen"/> -->


<!-- changed from 1000 to 50 (period in ms) : better check -->

<include file="$(find cat_move_to_target)/launch/robot_tf_publishing.launch">
	</include>

  	<!-- <node pkg="robot_camera_calibration" type="robot_camera_calibration" name="robot_camera_calibration" output="screen"/> -->
</launch>

